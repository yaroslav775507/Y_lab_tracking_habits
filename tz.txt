Приложение для отслеживания привычек



Описание проекта:

Целью является разработка серверной части многопользовательского приложения для отслеживания привычек.
Приложение должно позволять пользователям регистрироваться, создавать, управлять своими привычками,
отслеживать их выполнение и анализировать прогресс. Бэкэнд будет включать авторизацию,
обработку CRUD-операций для привычек, работу с базой данных, API для фронтенда и отправку уведомлений.



На первом уроке мы используем только java-core и коллекции.



Приложение должно быть консольным



Основные функции:

1. Регистрация и авторизация пользователей

* Возможность регистрации новых пользователей с уникальным email и паролем.

* Вход в систему с проверкой email и пароля.



2. Управление пользователями

* Возможность редактирования профиля пользователя (имя, email, пароль).

* Возможность удаления аккаунта.

* Реализация сброса пароля через email (опционально).



3. Управление привычками (CRUD)

* Создание привычки: Пользователь может создать новую привычку с указанием названия, описания и частоты (ежедневно, еженедельно).

* Редактирование привычки: Возможность изменения информации о привычке.

* Удаление привычки: Удаление привычки и всей связанной статистики выполнения.

* Просмотр привычек: Возвращение списка всех привычек пользователя с возможностью фильтрации по дате создания или статусу.



4. Отслеживание выполнения привычек

* Пользователь может ежедневно отмечать выполнение привычки.

* Хранение истории выполнения для каждой привычки.

* Генерация статистики выполнения привычки за указанный период (день, неделя, месяц).



5. Статистика и аналитика

* Подсчет текущих серий выполнения привычек (streak).

* Процент успешного выполнения привычек за определенный период.

* Формирование отчета для пользователя по прогрессу выполнения.



6. Уведомления (опционально)

* API для отправки напоминаний пользователю о необходимости выполнения привычки.

* Возможность интеграции с внешними сервисами для отправки email или push-уведомлений.



7. Администрирование

* Администраторы могут получать доступ к списку пользователей и привычек (опционально).

* Возможность блокировки или удаления пользователей.



Доп. материалы: https://drive.google.com/drive/folders/1rZaq58yAAcBKZqBeNSfpc6kb-GkuqHs0?usp=sharing



Технические требования:

- Приложение должно быть написано на Java.

- Приложение должно быть консольным.

- Использовать чистую Java без сторонних библиотек и фреймворков (без Spring и т.д.).

- Данные должны храниться в коллекциях (в памяти).

- Реализовать CRUD (Create, Read, Update, Delete) операции для управления автомобилями, заказами и пользователями.

- Реализовать авторизацию и аутентификацию пользователей.

- Написать unit-тесты для обеспечения покрытия кода не менее 75% (использовать JUnit5, Mockito, AssertJ).



Дополнительное задание для студентов (*по желанию)

При прохождении доп. заданий обязательно прикрепите результаты к своему ДЗ (скрин, гугл файл - ссылка и тд.). Выполнение данных заданий увеличит ваш шанс на приглашение на стажировку. Можно выбрать 1 ресурс.

https://leetcode.com
https://www.codewars.com/dashboard